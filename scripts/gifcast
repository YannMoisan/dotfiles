#!/bin/bash

( set -e $(--exit on error 2>/dev/null)

WORK=/tmp/gifcast
FIFO=/tmp/gifcast/fifo
ARGV=${*:-out.gif}

usage() { cat <<EOF >&2
usage: gifcast [OUTPUT_FILE]

a simple utility to painless GIF creation without the need of UI.

example:

Interfacing i3 with this script
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
│1│ bindsym Print exec gifcast out.gif
EOF
}

if [[ $* =~ (-h|--help) ]]; then usage; exit
fi

mkdir  $WORK &&
mkfifo $FIFO || { echo stop_record > $FIFO; and exit; }

generate_gif() {
  convert    \
    -delay 20 \
    -loop   0   $WORK/* $ARGV
}

# ↘ is the hook that generates our GIF when FIFO receives data
trap 'rm --force $FIFO
      generate_gif $ARGV
      rm --force --recursive $WORK' EXIT

(
  while :
  do import -window root $WORK/$((i++)).png
  done
) & pid=$!

# Waiting data on FIFO... (blocking)
read < $FIFO

kill $pid

wait) 2>/dev/null
